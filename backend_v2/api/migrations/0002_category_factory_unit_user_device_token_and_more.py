# Generated by Django 5.2.6 on 2025-09-22 10:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Kategoriya nomi"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                (
                    "unit_type",
                    models.CharField(
                        choices=[
                            ("weight", "Og'irlik"),
                            ("volume", "Hajm"),
                            ("piece", "Dona"),
                            ("length", "Uzunlik"),
                            ("area", "Maydon"),
                        ],
                        max_length=20,
                        verbose_name="Birlik turi",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Faol")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Kategoriya",
                "verbose_name_plural": "Kategoriyalar",
                "db_table": "categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Factory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, verbose_name="Zavod nomi")),
                (
                    "location",
                    models.CharField(blank=True, max_length=255, verbose_name="Manzil"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Zavod",
                "verbose_name_plural": "Zavodlar",
                "db_table": "factories",
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Birlik nomi"
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        help_text="Masalan: ton, m3, pcs, m",
                        max_length=10,
                        verbose_name="Belgisi",
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        choices=[
                            ("weight", "Og'irlik"),
                            ("volume", "Hajm"),
                            ("piece", "Dona"),
                            ("length", "Uzunlik"),
                            ("area", "Maydon"),
                        ],
                        max_length=20,
                        verbose_name="Birlik turi",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Faol")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "O'lchov birligi",
                "verbose_name_plural": "O'lchov birliklari",
                "db_table": "units",
                "ordering": ["unit_type", "name"],
            },
        ),
        migrations.AddField(
            model_name="user",
            name="device_token",
            field=models.CharField(
                blank=True, max_length=255, verbose_name="Device Token"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="usersession",
            name="id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="verificationcode",
            name="id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Kompaniya nomi"),
                ),
                (
                    "legal_address",
                    models.TextField(blank=True, verbose_name="Yuridik manzil"),
                ),
                (
                    "inn_stir",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="INN/STIR"
                    ),
                ),
                (
                    "bank_details",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Bank ma'lumotlari"
                    ),
                ),
                (
                    "accountant_contact",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Buxgalter aloqasi"
                    ),
                ),
                (
                    "telegram_owner",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Telegram egasi"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Tasdiqlangan"),
                ),
                (
                    "verification_documents",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Tasdiqlash hujjatlari"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Kompaniya",
                "verbose_name_plural": "Kompaniyalar",
                "db_table": "companies",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("brand", models.CharField(max_length=100, verbose_name="Brend")),
                ("grade", models.CharField(max_length=100, verbose_name="Marka")),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=20, verbose_name="Asosiy narx"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="UZS", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                (
                    "min_order_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        max_digits=20,
                        verbose_name="Minimal buyurtma",
                    ),
                ),
                (
                    "delivery_locations",
                    models.JSONField(
                        default=list, help_text="Yetkazib berish joylari ro'yxati"
                    ),
                ),
                (
                    "photos",
                    models.JSONField(default=list, help_text="Rasmlar URL ro'yxati"),
                ),
                (
                    "certificates",
                    models.JSONField(
                        default=list, help_text="Sertifikatlar URL ro'yxati"
                    ),
                ),
                (
                    "specifications",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Texnik xususiyatlar"
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Material turi"
                    ),
                ),
                (
                    "origin_country",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Ishlab chiqarish davlati",
                    ),
                ),
                (
                    "warranty_period",
                    models.IntegerField(default=0, verbose_name="Kafolat muddati (oy)"),
                ),
                (
                    "view_count",
                    models.IntegerField(default=0, verbose_name="Ko'rishlar soni"),
                ),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="Reyting",
                    ),
                ),
                (
                    "review_count",
                    models.IntegerField(default=0, verbose_name="Sharhlar soni"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Taniqli mahsulot"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="api.category",
                    ),
                ),
                (
                    "factory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="api.factory",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="api.unit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mahsulot",
                "verbose_name_plural": "Mahsulotlar",
                "db_table": "products",
            },
        ),
        migrations.CreateModel(
            name="Offer",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "price_per_unit",
                    models.DecimalField(
                        decimal_places=2, max_digits=20, verbose_name="Birlik narxi"
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=20, verbose_name="Jami summa"
                    ),
                ),
                (
                    "delivery_terms",
                    models.CharField(
                        max_length=255, verbose_name="Yetkazib berish shartlari"
                    ),
                ),
                (
                    "delivery_date",
                    models.DateField(verbose_name="Yetkazib berish sanasi"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Kutilmoqda"),
                            ("accepted", "Qabul qilingan"),
                            ("rejected", "Rad etilgan"),
                            ("counter_offered", "Qarshi taklif"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="Rad etish sababi"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="offers",
                        to="api.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Taklif",
                "verbose_name_plural": "Takliflar",
                "db_table": "offers",
            },
        ),
        migrations.CreateModel(
            name="RFQ",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "brand",
                    models.CharField(blank=True, max_length=100, verbose_name="Brend"),
                ),
                (
                    "grade",
                    models.CharField(blank=True, max_length=100, verbose_name="Sifat"),
                ),
                (
                    "sizes",
                    models.JSONField(
                        blank=True, default=list, verbose_name="O'lchamlar"
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        decimal_places=2, max_digits=20, verbose_name="Hajm"
                    ),
                ),
                (
                    "delivery_location",
                    models.CharField(
                        max_length=255, verbose_name="Yetkazib berish joyi"
                    ),
                ),
                (
                    "delivery_date",
                    models.DateField(verbose_name="Yetkazib berish sanasi"),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("bank", "Bank"), ("cash", "Naqd pul")],
                        max_length=20,
                        verbose_name="To'lov usuli",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Faol"),
                            ("completed", "Yakunlangan"),
                            ("cancelled", "Bekor qilingan"),
                            ("expired", "Muddati tugagan"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Holat",
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Muddati")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rfqs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rfqs",
                        to="api.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "So'rov",
                "verbose_name_plural": "So'rovlar",
                "db_table": "rfqs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Jami summa"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(max_length=20, verbose_name="To'lov usuli"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Yaratilgan"),
                            ("contract_generated", "Shartnoma yaratilgan"),
                            ("awaiting_payment", "To'lov kutilmoqda"),
                            ("payment_received", "To'lov qabul qilingan"),
                            ("in_preparation", "Tayyorlanmoqda"),
                            ("in_transit", "Yo'lda"),
                            ("delivered", "Yetkazib berilgan"),
                            ("confirmed", "Tasdiqlangan"),
                            ("completed", "Yakunlangan"),
                            ("cancelled", "Bekor qilingan"),
                        ],
                        default="created",
                        max_length=30,
                    ),
                ),
                (
                    "contract_url",
                    models.URLField(blank=True, verbose_name="Shartnoma URL"),
                ),
                (
                    "invoice_url",
                    models.URLField(blank=True, verbose_name="Hisob-faktura URL"),
                ),
                (
                    "payment_reference",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="To'lov havolasi"
                    ),
                ),
                (
                    "delivery_date",
                    models.DateField(verbose_name="Yetkazib berish sanasi"),
                ),
                (
                    "delivery_address",
                    models.TextField(
                        blank=True, verbose_name="Yetkazib berish manzili"
                    ),
                ),
                (
                    "delivery_contact",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        verbose_name="Yetkazib berish kontaktlari",
                    ),
                ),
                (
                    "tracking_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Kuzatish raqami"
                    ),
                ),
                (
                    "estimated_delivery_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Taxminiy yetkazib berish sanasi",
                    ),
                ),
                (
                    "actual_delivery_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Haqiqiy yetkazib berish sanasi",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buyer_orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="api.offer",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rfq",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="api.rfq",
                    ),
                ),
            ],
            options={
                "verbose_name": "Buyurtma",
                "verbose_name_plural": "Buyurtmalar",
                "db_table": "orders",
            },
        ),
        migrations.AddField(
            model_name="offer",
            name="rfq",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="offers",
                to="api.rfq",
            ),
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Sub-kategoriya nomi"
                    ),
                ),
                ("slug", models.SlugField(max_length=100, verbose_name="Slug")),
                ("is_active", models.BooleanField(default=True, verbose_name="Faol")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="api.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub-kategoriya",
                "verbose_name_plural": "Sub-kategoriyalar",
                "db_table": "subcategories",
                "ordering": ["category", "name"],
            },
        ),
        migrations.AddField(
            model_name="rfq",
            name="subcategory",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="rfqs",
                to="api.subcategory",
                verbose_name="Sub-kategoriya",
            ),
        ),
        migrations.CreateModel(
            name="SupplierCategory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suppliers",
                        to="api.category",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_categories",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Sotuvchi kategoriyasi",
                "verbose_name_plural": "Sotuvchi kategoriyalari",
                "db_table": "supplier_categories",
            },
        ),
        migrations.AddField(
            model_name="rfq",
            name="unit",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="rfqs",
                to="api.unit",
                verbose_name="Birlik",
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="default_unit",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_categories",
                to="api.unit",
                verbose_name="Standart birlik",
            ),
        ),
        migrations.CreateModel(
            name="DealerFactory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "dealer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dealer_factories",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "factory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dealers",
                        to="api.factory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Diler zavod",
                "verbose_name_plural": "Diler zavodlar",
                "db_table": "dealer_factories",
                "unique_together": {("dealer", "factory")},
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("profile_updated", "Profil yangilandi"),
                            ("password_changed", "Parol o'zgartirildi"),
                            ("company_profile_updated", "Kompaniya profili yangilandi"),
                            ("certificate_added", "Sertifikat qo'shildi"),
                            ("member_added", "A'zo qo'shildi"),
                            ("product_created", "Mahsulot yaratildi"),
                            ("product_updated", "Mahsulot yangilandi"),
                            ("new_rfq", "Yangi so'rov"),
                            ("rfq_expired", "So'rov muddati tugadi"),
                            ("new_offer", "Yangi taklif"),
                            ("offer_accepted", "Taklif qabul qilindi"),
                            ("offer_rejected", "Taklif rad etildi"),
                            ("order_created", "Buyurtma yaratildi"),
                            ("order_updated", "Buyurtma yangilandi"),
                            ("order_completed", "Buyurtma yakunlandi"),
                            ("order_cancelled", "Buyurtma bekor qilindi"),
                            ("payment_confirmed", "To'lov tasdiqlandi"),
                            ("payment_failed", "To'lov amalga oshmadi"),
                            ("rating_request", "Baho so'rovi"),
                            ("rating_received", "Baho qoldirildi"),
                            ("info", "Ma'lumot"),
                            ("warning", "Ogohlantirish"),
                            ("error", "Xatolik"),
                        ],
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("database_only", "Faqat database"),
                            ("push_only", "Faqat push"),
                            ("sms_only", "Faqat SMS"),
                            ("push_sms", "Push + SMS"),
                            ("all", "Barcha usullar"),
                        ],
                        default="database_only",
                        max_length=20,
                    ),
                ),
                ("related_rfq_id", models.IntegerField(blank=True, null=True)),
                ("related_offer_id", models.IntegerField(blank=True, null=True)),
                ("related_order_id", models.IntegerField(blank=True, null=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "recipient_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Xabar",
                "verbose_name_plural": "Xabarlar",
                "db_table": "notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient_user", "read_at"],
                        name="notificatio_recipie_92825f_idx",
                    ),
                    models.Index(
                        fields=["type", "created_at"],
                        name="notificatio_type_cb6908_idx",
                    ),
                    models.Index(
                        fields=["delivery_method", "sent_at"],
                        name="notificatio_deliver_0ee486_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CounterOffer",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "price_per_unit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Birlik narxi",
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Hajm",
                    ),
                ),
                (
                    "delivery_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Yetkazib berish sanasi"
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Izoh")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Kutilmoqda"),
                            ("accepted", "Qabul qilingan"),
                            ("rejected", "Rad etilgan"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="counter_offers_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "original_offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="counter_offers",
                        to="api.offer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Qarshi taklif",
                "verbose_name_plural": "Qarshi takliflar",
                "db_table": "counter_offers",
                "indexes": [
                    models.Index(
                        fields=["original_offer"], name="counter_off_origina_04a03d_idx"
                    ),
                    models.Index(
                        fields=["sender"], name="counter_off_sender__817ccc_idx"
                    ),
                    models.Index(
                        fields=["status"], name="counter_off_status_ba305e_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="OrderDocument",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("contract", "Shartnoma"),
                            ("invoice", "Hisob-faktura"),
                            ("ttn", "TTN"),
                            ("receipt", "Qabul qilish hujjati"),
                        ],
                        max_length=50,
                        verbose_name="Hujjat turi",
                    ),
                ),
                ("file_url", models.URLField(verbose_name="Fayl URL")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="api.order",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Buyurtma hujjati",
                "verbose_name_plural": "Buyurtma hujjatlari",
                "db_table": "order_documents",
                "indexes": [
                    models.Index(
                        fields=["order"], name="order_docum_order_i_78ef59_idx"
                    ),
                    models.Index(
                        fields=["document_type"], name="order_docum_documen_00c13a_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="OrderStatusHistory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=30, verbose_name="Holat")),
                ("comment", models.TextField(blank=True, verbose_name="Izoh")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_status_changes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="api.order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Buyurtma holati tarixi",
                "verbose_name_plural": "Buyurtma holati tarixi",
                "db_table": "order_status_history",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["order"], name="order_statu_order_i_8ab903_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="order_statu_created_0970b5_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Summa"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("bank", "Bank"), ("cash", "Naqd pul")],
                        max_length=20,
                        verbose_name="To'lov usuli",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Kutilmoqda"),
                            ("received", "Qabul qilingan"),
                            ("held_in_escrow", "Escrow da ushlab turilmoqda"),
                            ("released", "Ozod qilingan"),
                            ("refunded", "Qaytarilgan"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "payment_proof_url",
                    models.URLField(
                        blank=True, verbose_name="To'lov tasdiqlash hujjati URL"
                    ),
                ),
                (
                    "escrow_reference",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Escrow havolasi"
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Tranzaksiya ID"
                    ),
                ),
                (
                    "gateway_response",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Gateway javobi"
                    ),
                ),
                (
                    "fee_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Komissiya summasi",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="UZS", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(
                        decimal_places=4,
                        default=1,
                        max_digits=10,
                        verbose_name="Valyuta kursi",
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Qayta ishlangan vaqt"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="api.order",
                    ),
                ),
            ],
            options={
                "verbose_name": "To'lov",
                "verbose_name_plural": "To'lovlar",
                "db_table": "payments",
                "indexes": [
                    models.Index(fields=["order"], name="payments_order_i_b32b33_idx"),
                    models.Index(fields=["status"], name="payments_status_d621e5_idx"),
                    models.Index(
                        fields=["payment_method"], name="payments_payment_ee488d_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="payments_created_e3a130_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(fields=["buyer"], name="orders_buyer_i_a41c52_idx"),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(fields=["supplier"], name="orders_supplie_508ee5_idx"),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(fields=["status"], name="orders_status_762191_idx"),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(fields=["created_at"], name="orders_created_77e2b9_idx"),
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(fields=["rfq"], name="offers_rfq_id_75bb11_idx"),
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(fields=["supplier"], name="offers_supplie_9655f6_idx"),
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(fields=["status"], name="offers_status_5a0bfa_idx"),
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(fields=["created_at"], name="offers_created_9f8ec4_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="subcategory",
            unique_together={("category", "slug")},
        ),
        migrations.AlterUniqueTogether(
            name="suppliercategory",
            unique_together={("user", "category")},
        ),
        migrations.AddIndex(
            model_name="rfq",
            index=models.Index(
                fields=["buyer", "status"], name="rfqs_buyer_i_c8a99b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rfq",
            index=models.Index(
                fields=["category", "status"], name="rfqs_categor_a36a59_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rfq",
            index=models.Index(
                fields=["subcategory", "status"], name="rfqs_subcate_3aabd3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rfq",
            index=models.Index(
                fields=["delivery_date"], name="rfqs_deliver_267cbb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rfq",
            index=models.Index(fields=["expires_at"], name="rfqs_expires_1dc8ab_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["supplier", "is_active"], name="products_supplie_838d93_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["category"], name="products_categor_4083ff_idx"),
        ),
    ]
