# MetOneX Backend v2 - API Request Examples
# Barcha API endpointlari uchun request misollari
# Base URL: http://localhost:8000

# ===========================================
# 1. AUTHENTICATION ENDPOINTS
# ===========================================

# 1.1 SMS kod yuborish
POST http://localhost:8000/api/v1/auth/send-sms/
Content-Type: application/json

{
    "phone": "+998901234567"
}

# 1.2 SMS kodni tasdiqlash
POST http://localhost:8000/api/v1/auth/verify-sms/
Content-Type: application/json

{
    "phone": "+998901234567",
    "code": "123456"
}

# 1.3 Foydalanuvchi ro'yxatdan o'tish
POST http://localhost:8000/api/v1/auth/register/
Content-Type: application/json

{
    "phone": "+998901234567",
    "role": "buyer",
    "supplier_type": null,
    "first_name": "John",
    "last_name": "Doe",
    "password": "SecurePass123!",
    "password_confirm": "SecurePass123!"
}

# 1.4 Foydalanuvchi kirish
POST http://localhost:8000/api/v1/auth/login/
Content-Type: application/json

{
    "phone": "+998901234567",
    "password": "SecurePass123!"
}

# 1.5 Foydalanuvchi chiqish
POST http://localhost:8000/api/v1/auth/logout/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 1.6 Token yangilash
POST http://localhost:8000/api/v1/auth/refresh/
Content-Type: application/json

{
    "refresh": "YOUR_REFRESH_TOKEN"
}

# 1.7 Profil ma'lumotlarini olish
GET http://localhost:8000/api/v1/auth/profile/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 1.8 Profil ma'lumotlarini yangilash
PUT http://localhost:8000/api/v1/auth/profile/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "first_name": "John Updated",
    "last_name": "Doe Updated",
    "email": "john.doe@example.com"
}

# 1.9 Parol o'zgartirish uchun SMS kod yuborish
POST http://localhost:8000/api/v1/auth/send-password-reset-sms/
Content-Type: application/json

{
    "phone": "+998901234567"
}

# 1.10 Parol o'zgartirish
POST http://localhost:8000/api/v1/auth/reset-password/
Content-Type: application/json

{
    "phone": "+998901234567",
    "code": "123456",
    "new_password": "NewSecurePass123!",
    "new_password_confirm": "NewSecurePass123!"
}

# ===========================================
# 2. CATALOG ENDPOINTS
# ===========================================

# 2.1 Kategoriyalar ro'yxati
GET http://localhost:8000/api/v1/catalog/categories/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 2.2 Kategoriya ma'lumotlari
GET http://localhost:8000/api/v1/catalog/categories/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 2.3 Sub-kategoriyalar ro'yxati
GET http://localhost:8000/api/v1/catalog/subcategories/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 2.4 Sub-kategoriya ma'lumotlari
GET http://localhost:8000/api/v1/catalog/subcategories/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 2.5 Birliklar ro'yxati
GET http://localhost:8000/api/v1/catalog/units/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 2.6 Birlik ma'lumotlari
GET http://localhost:8000/api/v1/catalog/units/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 2.7 Zavodlar ro'yxati
GET http://localhost:8000/api/v1/catalog/factories/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 2.8 Zavod ma'lumotlari
GET http://localhost:8000/api/v1/catalog/factories/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 2.9 Kategoriya uchun mavjud birliklar
GET http://localhost:8000/api/v1/catalog/categories/1/units/
Authorization: Bearer YOUR_ACCESS_TOKEN

# ===========================================
# 3. COMPANY ENDPOINTS
# ===========================================

# 3.1 Kompaniya yaratish
POST http://localhost:8000/api/v1/companies/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "name": "MetOneX Company",
    "type": "supplier",
    "inn": "123456789",
    "address": "Toshkent shahar, Chilonzor tumani",
    "phone": "+998901234567",
    "email": "info@metonex.com",
    "description": "MetOneX kompaniyasi",
    "bank_details": {
        "bank_name": "Xalq Banki",
        "account_number": "20208000000000000001",
        "mfo": "00014"
    }
}

# 3.2 Kompaniya ma'lumotlarini olish
GET http://localhost:8000/api/v1/companies/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 3.3 Kompaniya ma'lumotlarini yangilash
PUT http://localhost:8000/api/v1/companies/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "name": "MetOneX Company Updated",
    "description": "Yangilangan tavsif"
}

# 3.4 Kompaniya ro'yxati
GET http://localhost:8000/api/v1/companies/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 3.5 Mening kompaniyam
GET http://localhost:8000/api/v1/companies/my-company/
Authorization: Bearer YOUR_ACCESS_TOKEN

# ===========================================
# 4. RFQ ENDPOINTS
# ===========================================

# 4.1 RFQ yaratish
POST http://localhost:8000/api/v1/rfqs/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "category": 1,
    "subcategory": 1,
    "brand": "Premium",
    "grade": "A+",
    "sizes": ["10x20", "15x25"],
    "volume": 1000.50,
    "unit": 1,
    "delivery_location": "Toshkent shahar",
    "delivery_date": "2025-10-15",
    "payment_method": "bank"
}

# 4.2 RFQ ro'yxati
GET http://localhost:8000/api/v1/rfqs/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 4.3 RFQ ma'lumotlari
GET http://localhost:8000/api/v1/rfqs/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 4.4 Mening RFQ'larim
GET http://localhost:8000/api/v1/rfqs/my-rfqs/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 4.5 RFQ yangilash
PUT http://localhost:8000/api/v1/rfqs/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "volume": 1500.75,
    "delivery_date": "2025-10-20"
}

# 4.6 RFQ bekor qilish
POST http://localhost:8000/api/v1/rfqs/1/cancel/
Authorization: Bearer YOUR_ACCESS_TOKEN

# ===========================================
# 5. OFFER ENDPOINTS
# ===========================================

# 5.1 Taklif yaratish
POST http://localhost:8000/api/v1/offers/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "rfq": 1,
    "unit_price": 15000.00,
    "total_price": 15000000.00,
    "delivery_time": 7,
    "delivery_cost": 500000.00,
    "payment_terms": "50% oldindan, 50% yetkazib berishda",
    "notes": "Yuqori sifatli mahsulot"
}

# 5.2 Taklif ro'yxati
GET http://localhost:8000/api/v1/offers/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 5.3 Taklif ma'lumotlari
GET http://localhost:8000/api/v1/offers/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 5.4 Mening takliflarim
GET http://localhost:8000/api/v1/offers/my-offers/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 5.5 Taklifni qabul qilish
POST http://localhost:8000/api/v1/offers/1/accept/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 5.6 Taklifni rad etish
POST http://localhost:8000/api/v1/offers/1/reject/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 5.7 Taklif yangilash
PUT http://localhost:8000/api/v1/offers/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "unit_price": 14500.00,
    "total_price": 14500000.00,
    "notes": "Yangilangan taklif"
}

# ===========================================
# 6. ORDER ENDPOINTS
# ===========================================

# 6.1 Buyurtma ro'yxati
GET http://localhost:8000/api/v1/orders/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 6.2 Buyurtma ma'lumotlari
GET http://localhost:8000/api/v1/orders/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 6.3 Mening buyurtmalarim
GET http://localhost:8000/api/v1/orders/my-orders/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 6.4 Buyurtma holatini yangilash
PUT http://localhost:8000/api/v1/orders/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "status": "in_preparation",
    "delivery_address": "Toshkent shahar, Chilonzor tumani, 1-uy"
}

# 6.5 Buyurtma holatini yangilash (supplier)
POST http://localhost:8000/api/v1/orders/1/update-status/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "status": "in_transit",
    "tracking_number": "TRK123456789"
}

# 6.6 Buyurtma tasdiqlash (buyer)
POST http://localhost:8000/api/v1/orders/1/confirm-delivery/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 6.7 Hujjatlar yaratish (placeholder)
POST http://localhost:8000/api/v1/orders/1/generate-documents/
Authorization: Bearer YOUR_ACCESS_TOKEN

# ===========================================
# 7. PAYMENT ENDPOINTS (Vaqtincha o'chirilgan)
# ===========================================

# 7.1 To'lov ro'yxati (URL o'chirilgan)
# GET http://localhost:8000/api/v1/payments/
# Authorization: Bearer YOUR_ACCESS_TOKEN

# 7.2 To'lov ma'lumotlari (URL o'chirilgan)
# GET http://localhost:8000/api/v1/payments/1/
# Authorization: Bearer YOUR_ACCESS_TOKEN

# 7.3 Naqd to'lov tasdiqlash (URL o'chirilgan)
# POST http://localhost:8000/api/v1/payments/1/confirm-cash/
# Authorization: Bearer YOUR_ACCESS_TOKEN

# 7.4 Escrow dan to'lovni chiqarish (URL o'chirilgan)
# POST http://localhost:8000/api/v1/payments/1/release-escrow/
# Authorization: Bearer YOUR_ACCESS_TOKEN

# ===========================================
# 8. NOTIFICATION ENDPOINTS
# ===========================================

# 8.1 Xabarnomalar ro'yxati
GET http://localhost:8000/api/v1/notifications/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 8.2 Xabarnoma ma'lumotlari
GET http://localhost:8000/api/v1/notifications/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 8.3 Xabarnomani o'qilgan deb belgilash
POST http://localhost:8000/api/v1/notifications/1/mark-read/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 8.4 Barcha xabarnomalarni o'qilgan deb belgilash
POST http://localhost:8000/api/v1/notifications/mark-all-read/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 8.5 Xabarnoma sozlamalari (placeholder)
GET http://localhost:8000/api/v1/notifications/settings/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 8.6 Xabarnoma sozlamalarini yangilash (placeholder)
POST http://localhost:8000/api/v1/notifications/settings/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "email_notifications": true,
    "sms_notifications": false,
    "push_notifications": true
}

# ===========================================
# 9. RATING ENDPOINTS
# ===========================================

# 9.1 Reyting yaratish
POST http://localhost:8000/api/v1/ratings/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "order": 1,
    "rating": 5,
    "comment": "Ajoyib xizmat!"
}

# 9.2 Reyting ro'yxati
GET http://localhost:8000/api/v1/ratings/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 9.3 Reyting ma'lumotlari
GET http://localhost:8000/api/v1/ratings/1/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 9.4 Reyting yangilash
PUT http://localhost:8000/api/v1/ratings/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "rating": 4,
    "comment": "Yaxshi xizmat"
}

# ===========================================
# 10. ADMIN ENDPOINTS
# ===========================================

# 10.1 Admin panel - foydalanuvchilar
GET http://localhost:8000/api/v1/admin/users/
Authorization: Bearer ADMIN_ACCESS_TOKEN

# 10.2 Admin panel - kompaniyalar
GET http://localhost:8000/api/v1/admin/companies/
Authorization: Bearer ADMIN_ACCESS_TOKEN

# 10.3 Admin panel - buyurtmalar
GET http://localhost:8000/api/v1/admin/orders/
Authorization: Bearer ADMIN_ACCESS_TOKEN

# 10.4 Admin panel - to'lovlar
GET http://localhost:8000/api/v1/admin/payments/
Authorization: Bearer ADMIN_ACCESS_TOKEN

# ===========================================
# 11. DIDOX API INTEGRATION (Kelajakda)
# ===========================================

# 11.1 Shartnoma yaratish (Didox API)
POST https://api.didox.uz/v1/contracts
Authorization: Bearer DIDOX_API_KEY
Content-Type: application/json

{
    "title": "MetOneX Shartnoma",
    "buyer": {
        "name": "Kompaniya A",
        "inn": "123456789",
        "address": "Toshkent shahar"
    },
    "supplier": {
        "name": "Kompaniya B", 
        "inn": "987654321",
        "address": "Samarqand shahar"
    },
    "amount": 15000000.00,
    "currency": "UZS",
    "delivery_date": "2025-10-15",
    "terms": "Shartnoma shartlari..."
}

# 11.2 Hisob-faktura yaratish (Didox API)
POST https://api.didox.uz/v1/invoices
Authorization: Bearer DIDOX_API_KEY
Content-Type: application/json

{
    "contract_id": "CONTRACT_123",
    "order_id": "ORDER_456",
    "amount": 15000000.00,
    "currency": "UZS",
    "due_date": "2025-10-20",
    "items": [
        {
            "name": "Mahsulot nomi",
            "quantity": 1000,
            "unit_price": 15000.00,
            "total": 15000000.00
        }
    ]
}

# 11.3 Hujjat holatini tekshirish (Didox API)
GET https://api.didox.uz/v1/documents/CONTRACT_123/status
Authorization: Bearer DIDOX_API_KEY

# 11.4 Hujjatni yuklab olish (Didox API)
GET https://api.didox.uz/v1/documents/CONTRACT_123/download
Authorization: Bearer DIDOX_API_KEY

# ===========================================
# 12. BANK ESCROW API INTEGRATION (Kelajakda)
# ===========================================

# 12.1 Escrow hisob yaratish (Bank API)
POST https://api.bank.uz/v1/escrow/accounts
Authorization: Bearer BANK_API_KEY
Content-Type: application/json

{
    "buyer_id": "BUYER_123",
    "supplier_id": "SUPPLIER_456",
    "order_id": "ORDER_789",
    "amount": 15000000.00,
    "currency": "UZS",
    "release_conditions": "Yetkazib berish tasdiqlangandan so'ng"
}

# 12.2 To'lovni qabul qilish (Bank API)
POST https://api.bank.uz/v1/escrow/accounts/ESCROW_123/deposit
Authorization: Bearer BANK_API_KEY
Content-Type: application/json

{
    "payer_id": "BUYER_123",
    "amount": 15000000.00,
    "currency": "UZS",
    "payment_method": "bank_transfer"
}

# 12.3 Escrow holatini tekshirish (Bank API)
GET https://api.bank.uz/v1/escrow/accounts/ESCROW_123/status
Authorization: Bearer BANK_API_KEY

# 12.4 Mablag'ni chiqarish (Bank API)
POST https://api.bank.uz/v1/escrow/accounts/ESCROW_123/release
Authorization: Bearer BANK_API_KEY
Content-Type: application/json

{
    "release_to": "SUPPLIER_456",
    "amount": 15000000.00,
    "currency": "UZS",
    "confirmation_code": "DELIVERY_CONFIRMED"
}

# ===========================================
# 13. API DOCUMENTATION ENDPOINTS
# ===========================================

# 13.1 Swagger UI
GET http://localhost:8000/api/schema/swagger-ui/

# 13.2 ReDoc
GET http://localhost:8000/api/schema/redoc/

# 13.3 OpenAPI Schema
GET http://localhost:8000/api/schema/

# ===========================================
# 14. TEST DATA CREATION
# ===========================================

# 14.1 Test kategoriya yaratish
POST http://localhost:8000/api/v1/catalog/categories/
Authorization: Bearer ADMIN_ACCESS_TOKEN
Content-Type: application/json

{
    "name": "Test Kategoriya",
    "description": "Test kategoriya tavsifi",
    "unit_type": "weight"
}

# 14.2 Test sub-kategoriya yaratish
POST http://localhost:8000/api/v1/catalog/subcategories/
Authorization: Bearer ADMIN_ACCESS_TOKEN
Content-Type: application/json

{
    "name": "Test Sub-kategoriya",
    "description": "Test sub-kategoriya tavsifi",
    "category": 1
}

# 14.3 Test birlik yaratish
POST http://localhost:8000/api/v1/catalog/units/
Authorization: Bearer ADMIN_ACCESS_TOKEN
Content-Type: application/json

{
    "name": "Test Birlik",
    "symbol": "TB",
    "unit_type": "weight"
}

# 14.4 Test zavod yaratish
POST http://localhost:8000/api/v1/catalog/factories/
Authorization: Bearer ADMIN_ACCESS_TOKEN
Content-Type: application/json

{
    "name": "Test Zavod",
    "description": "Test zavod tavsifi",
    "location": "Toshkent shahar"
}

# ===========================================
# 15. ERROR HANDLING EXAMPLES
# ===========================================

# 15.1 Noto'g'ri telefon raqam
POST http://localhost:8000/api/v1/auth/send-sms/
Content-Type: application/json

{
    "phone": "998901234567"  # + belgisi yo'q
}

# 15.2 Noto'g'ri SMS kod
POST http://localhost:8000/api/v1/auth/verify-sms/
Content-Type: application/json

{
    "phone": "+998901234567",
    "code": "000000"  # Noto'g'ri kod
}

# 15.3 Mavjud bo'lmagan RFQ
GET http://localhost:8000/api/v1/rfqs/999999/
Authorization: Bearer YOUR_ACCESS_TOKEN

# 15.4 Ruxsatsiz kirish
GET http://localhost:8000/api/v1/rfqs/
# Authorization header yo'q

# ===========================================
# 16. WORKFLOW EXAMPLES
# ===========================================

# 16.1 To'liq workflow: RFQ → Offer → Order
# 1. RFQ yaratish
POST http://localhost:8000/api/v1/rfqs/
Authorization: Bearer BUYER_TOKEN
Content-Type: application/json

{
    "category": 1,
    "brand": "Premium",
    "volume": 1000,
    "unit": 1,
    "delivery_location": "Toshkent",
    "delivery_date": "2025-10-15",
    "payment_method": "bank"
}

# 2. Taklif yaratish
POST http://localhost:8000/api/v1/offers/
Authorization: Bearer SUPPLIER_TOKEN
Content-Type: application/json

{
    "rfq": 1,
    "unit_price": 15000.00,
    "total_price": 15000000.00,
    "delivery_time": 7,
    "delivery_cost": 500000.00
}

# 3. Taklifni qabul qilish
POST http://localhost:8000/api/v1/offers/1/accept/
Authorization: Bearer BUYER_TOKEN

# 4. Buyurtma holatini kuzatish
GET http://localhost:8000/api/v1/orders/1/
Authorization: Bearer BUYER_TOKEN

# ===========================================
# NOTES
# ===========================================

# 1. YOUR_ACCESS_TOKEN ni haqiqiy JWT token bilan almashtiring
# 2. ADMIN_ACCESS_TOKEN ni admin foydalanuvchi tokeni bilan almashtiring
# 3. DIDOX_API_KEY ni Didox API kaliti bilan almashtiring
# 4. BANK_API_KEY ni bank API kaliti bilan almashtiring
# 5. Barcha ID'lar (1, 2, 3...) ni haqiqiy ID'lar bilan almashtiring
# 6. Payment endpoints hozircha o'chirilgan - didox API integratsiya qilganda qayta yoqiladi
# 7. Notification settings va device token hozircha placeholder - keyingi qadamda to'ldiriladi