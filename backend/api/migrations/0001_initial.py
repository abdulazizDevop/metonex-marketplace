# Generated by Django 4.2.7 on 2025-09-08 09:44

import api.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("phone", models.CharField(max_length=20, unique=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("sotuvchi", "sotuvchi"),
                            ("sotib_oluvchi", "sotib_oluvchi"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="files/users/images/"
                    ),
                ),
                ("verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("sotib_oluvchi", "sotib_oluvchi"),
                            ("sotuvchi", "sotuvchi"),
                        ],
                        max_length=20,
                    ),
                ),
                ("inn", models.CharField(blank=True, max_length=20, null=True)),
                ("region", models.CharField(blank=True, max_length=100, null=True)),
                ("verified", models.BooleanField(default=True)),
                (
                    "documents",
                    models.FileField(
                        blank=True, null=True, upload_to="companies/documents/"
                    ),
                ),
                (
                    "sertificate",
                    models.ImageField(
                        blank=True, null=True, upload_to="companies/sertificates/"
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("total_amount", models.BigIntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("bajarilmoqda", "bajarilmoqda"),
                            ("bajarildi", "bajarildi"),
                            ("bekor_qilindi", "bekor_qilindi"),
                        ],
                        default="bajarilmoqda",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("cancellation_reason", models.TextField(blank=True, null=True)),
                (
                    "buyer_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buyer_orders",
                        to="api.company",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VerificationCode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("phone", models.CharField(max_length=20)),
                ("code", models.CharField(max_length=6)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("used_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["phone", "created_at"], name="idx_vc_phone_time"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.TextField()),
                ("quantity", models.IntegerField()),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("tonna", "tonna"),
                            ("metr_kub", "metr_kub"),
                            ("dona", "dona"),
                            ("kilogram", "kilogram"),
                            ("qop", "qop"),
                            ("quti", "quti"),
                            ("metr", "metr"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("naqd_pul", "naqd_pul"),
                            ("bank", "bank"),
                            ("kredit", "kredit"),
                            ("boshqa", "boshqa"),
                        ],
                        default="naqd_pul",
                        max_length=50,
                    ),
                ),
                ("budget_from", models.BigIntegerField()),
                ("budget_to", models.BigIntegerField()),
                ("region", models.CharField(max_length=100)),
                ("delivery_address", models.TextField()),
                ("deadline_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ochiq", "ochiq"),
                            ("yopilgan", "yopilgan"),
                            ("muddati_tugadi", "muddati_tugadi"),
                        ],
                        default="ochiq",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(default=api.models.default_request_expires_at),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "buyer_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buyer_requests",
                        to="api.company",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests",
                        to="api.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "quality_rating",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "delivery_speed",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "communication",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "price_fairness",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "reliability",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "overall_score",
                    models.DecimalField(decimal_places=1, default=1, max_digits=3),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "project_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "order_volume",
                    models.CharField(
                        choices=[
                            ("kichik", "kichik"),
                            ("orta", "orta"),
                            ("katta", "katta"),
                        ],
                        default="kichik",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="api.order",
                    ),
                ),
                (
                    "rated_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings_received",
                        to="api.company",
                    ),
                ),
                (
                    "rater_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings_given",
                        to="api.company",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to="api.request",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="supplier_company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="supplier_orders",
                to="api.company",
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("new_request", "new_request"),
                            ("order_created", "order_created"),
                            ("order_status_changed", "order_status_changed"),
                            ("sla_breach", "sla_breach"),
                        ],
                        max_length=50,
                    ),
                ),
                ("message", models.TextField()),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient_company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="api.company",
                    ),
                ),
                (
                    "recipient_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="api.order",
                    ),
                ),
                (
                    "related_request",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="api.request",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("mavjud", "mavjud"),
                            ("mavjud_emas", "mavjud_emas"),
                            ("sotildi", "sotildi"),
                        ],
                        default="mavjud",
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("quantity", models.IntegerField()),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("tonna", "tonna"),
                            ("metr_kub", "metr_kub"),
                            ("dona", "dona"),
                            ("kilogram", "kilogram"),
                            ("qop", "qop"),
                            ("quti", "quti"),
                            ("metr", "metr"),
                        ],
                        default="tonna",
                        max_length=50,
                    ),
                ),
                ("price", models.BigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="api.category",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="api.company",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanyMember",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("egasi", "egasi"), ("xodim", "xodim")],
                        default="xodim",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="api.company",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="request",
            index=models.Index(
                fields=["category", "region", "status"], name="idx_req_cat_reg_stat"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rating",
            unique_together={("order", "rater_company", "rated_company")},
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["buyer_company", "supplier_company", "status"],
                name="idx_ord_comp_stat",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient_user", "read_at"], name="idx_notif_rec_read"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="companymember",
            unique_together={("company", "user")},
        ),
    ]
